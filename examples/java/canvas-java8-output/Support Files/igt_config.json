{
    "submissionStyle": "canvas",
    "language": "java8",
    "gradingStyle": "output",
    "mainClassName": "MusicRunner",
    "studentFiles": [
        "Music.java"
    ],
    "supportFiles": [
        "MusicInterface.java",
        "SongTitleHelper.java",
        "MusicRunner.java",
        "grading-notes.md"
    ],
    "checkstyleFileName": "checkstyle.xml",
    "pointBasedComments": {
        "belowOrEqual": {
            "40": "In the future, feel free to go to office hours if you need any help with your homework."
        },
        "aboveOrEqual": {
            "80": "Good work!",
            "85": "Nice work!",
            "90": "Well done!",
            "95": "Excellent work!",
            "100": "Fantastic work!"
        }
    },
    "basePoints": 100,
    "maxPoints": 100,
    "dictionaryItems": [
        "ArrayList",
        "SomeMadeUpWord",
        "This is a list of words you want to add to the english dictionary so that it doesn't flag them as spelling mistakes"
    ],
    "javaHintHelpers": {
        "expectedPublicMethods": {
            "Music.java": [
                "whatWeCouldHaveBeenTogether",
                "whatWeCouldHaveLivedForever",
                "whoIsGoingToDanceWithMe"
            ]
        },
        "expectedPrivateFields": {
            "Music.java": [
                "expectedPrivateVariable"
            ]
        }
    },
    "autocomplete": {
        "commonRubricItemComments": [
            "Autocomplete for a common rubric item comment"
        ],
        "commonOptionalRubricItemComments": [
            "Autocomplete for a common optional rubric item comment"
        ],
        "commonAdditionalComments": [
            "Autocomplete for an additional comment"
        ]
    },
    "rubricItems": [
        {
            "name": "Bad enunciation",
            "notes": "Dummy negative rubric item. Note that the regexes don't actually mean anything, they're just to check that regex detection works",
            "points": -5,
            "author": "Deb Banerji",
            "contactLink": "mailto:debkbanerji@gmail.com",
            "regexes": [
                "@Override"
            ],
            "badRegexes": [
                "TODO"
            ],
            "goodRegexes": [
                "public String"
            ]
        },
        {
            "name": "Good Vocals",
            "notes": "Dummy positive rubric item",
            "contactLink": "mailto:debkbanerji@gmail.com",
            "points": 5
        }
    ],
    "optionalRubricItems": [
        {
            "name": "Sample Optional Rubric Item",
            "notes": "Note that optional rubric items also support regexes, notes, authors and contact links. They can also be applied multiple times if they contain the 'maxApplications' field. If an optional rubric item contains the 'hintKey' field, the grader can automatically try to apply the item during preprocessing based on certain conditions (examples below)",
            "points": -5,
            "author": "Deb Banerji",
            "contactLink": "mailto:debkbanerji@gmail.com",
            "maxApplications": 2,
            "regexes": [
                "@Override"
            ],
            "badRegexes": [
                "TODO"
            ],
            "goodRegexes": [
                "public string"
            ]
        },
        {
            "name": "One or more exceptions missing messages",
            "notes": "This deduction is applied a maximum of one time",
            "author": "Deb Banerji",
            "contactLink": "mailto:debkbanerji@gmail.com",
            "points": -5,
            "badRegexes": [
                "(.*)Exception\\s*\\(\\s*\\)(.*)"
            ]
        },
        {
            "name": "One or more bad exception messages",
            "points": -2,
            "regexes": [
                "(.*)Exception\\s*\\(\\s*\\)(.*)"
            ]
        },
        {
            "name": "Package statement",
            "points": -5
        },
        {
            "hintKey": "encapsulationViolation",
            "name": "Violation of encapsulation (added non private variables or helper methods)",
            "points": -5
        },
        {
            "name": "Print statements in code",
            "points": -5,
            "badRegexes": [
                "System\\.out\\.print"
            ]
        },
        {
            "name": "Generics problems",
            "notes": "The list of bad regexes are mostly just variations of a single regex to catch improper generic use for each expected generic class - remember to add possible generic class regexes for your own assignment if you want to achieve similar functionality",
            "points": -5,
            "badRegexes": [
                "SuppressWarnings",
                "ArrayList(?!(\\\\s*<)|(\\\\w))",
                "List(?!(\\\\s*<)|(\\\\w))",
                "Music(?!(\\\\s*<)|(\\\\w))",
                "MusicInterface(?!(\\\\s*<)|(\\\\w))"
            ]
        },
        {
            "hintKey": "additionalInstanceVariables",
            "name": "Additional instance variables",
            "maxApplications": 2,
            "points": -5
        },
        {
            "name": "Forbidden statement use",
            "points": -5,
            "badRegexes": [
                "System\\\\.arraycopy",
                "clone",
                "assert",
                "Arrays",
                "Objects",
                "Collections",
                "Collection\\\\.toArray",
                "reflect"
            ]
        },
        {
            "name": "Catching inappropriate exceptions",
            "points": -3
        },
        {
            "name": "Modified public method header",
            "points": -2,
            "badRegexes": [
                "throws"
            ]
        },
        {
            "name": "Missing or invalid author information",
            "points": -2,
            "regexes": [
                "(@author)|(@GTID)|(@userid)"
            ],
            "badRegexes": [
                "@author.*your.*((name)|(id))"
            ]
        },
        {
            "name": "Used constructs intended only for grading in implementation",
            "points": -5,
            "badRegexes": [
                "42"
            ]
        },
        {
            "hintKey": "checkstyle",
            "name": "Checkstyle errors",
            "maxApplications": 20,
            "points": -1
        },
        {
            "name": "Extra Credit",
            "notes": "For no good reason",
            "points": 10
        },
        {
            "name": "More Extra Credit",
            "notes": "Because why not",
            "maxApplications": 5,
            "points": 2
        },
        {
            "hintKey": "nonCompile",
            "name": "Did not compile",
            "notes": "Please check the compiler output",
            "maxApplications": 1,
            "points": -100
        },
        {
            "hintKey": "nonSubmit",
            "name": "Missing one or more submission files",
            "notes": "Please check the submitted files",
            "maxApplications": 1,
            "points": -100
        }
    ]
}